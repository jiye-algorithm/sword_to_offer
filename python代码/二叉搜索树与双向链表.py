'''输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。'''# -*- coding:utf-8 -*-class TreeNode:    def __init__(self, x):        self.val = x        self.left = None        self.right = None        passclass Solution:    def Convert(self, pRootOfTree):        last_node = None        self._convert(pRootOfTree, last_node)        head = last_node        while head != None and head.left != None:            head = head.left        return head        pass    def _convert(self, root, last_node):        if root == None:            return        if root.left != None:            self._convert(root.left, last_node)        root.left = last_node        if last_node:            last_node.right = root        last_node = root        if root.right != None:            self._convert(root.right, last_node)        pass    pass