'''输入n个整数，找出其中最小的K个数。例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4,。'''# -*- coding:utf-8 -*-'''这里至少两种解法第一种： 利用来源于快速排序的partion函数，    * 时间复杂度O(n)，    * 需要改变原来数据，    * 需要将数据一次全部加载到内存中    第二种解法：利用这里的方法:    * 利用了红黑树存储了最小的k个节点，    * 时间复杂度： O(nlogk)    * 不需要将数据全部加载到内存中。适合大数据'''class Solution:    def GetLeastNumbers_Solution(self, tinput, k):        import bisect        if tinput == None or len(tinput) < k or k == 0:            return []        # 结果数组        result = []        for i in range(k):            result.append(tinput[i])        result.sort()        for input in tinput[k:]:            if input < result[-1]:                result.pop(-1)                # 插入后数组仍然有序                bisect.insort(result, input)                pass            pass        return result    passif __name__ == '__main__':    Solution().GetLeastNumbers_Solution([4,5,1,6,2,7,3,8],4)    pass