# -*- coding:utf-8 -*-'''在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2'''import collectionsclass Solution:    # 这里要特别注意~找到任意重复的一个值并赋值到duplication[0]    # 函数返回True/False    def duplicate1(self, numbers, duplication):        '''        算法实现 30ms        '''        length = len(numbers)        for number in numbers:            if number >= length:                return False        for i in range(length):            while i != numbers[i]:                if numbers[i] == numbers[numbers[i]]:                    duplication[0] = numbers[i]                    return True                numbers[numbers[i]], numbers[i] = numbers[i], numbers[numbers[i]]            pass        return False        pass    def duplicate(self, numbers, duplication):        '''        利用库函数实现 21ms        '''        c = collections.Counter(numbers)        for key, value in c.items():            if value > 1:                duplication.append(key)                return True            pass        return False        pass    passif __name__ == '__main__':    Solution().duplicate([2,1,3,1,4], [])