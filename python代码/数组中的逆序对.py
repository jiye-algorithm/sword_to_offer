'''在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。并将P对1000000007取模的结果输出。 即输出P%1000000007'''# -*- coding:utf-8 -*-class Solution:    def InversePairs(self, data):        copy = list(data)        length = len(data)        return self._inverse_pairs_core(data, copy, 0, length - 1)        pass    def _inverse_pairs_core(self, data, copy, start, end):        # 只有一个元素的时候终止递归        if start == end:            copy[start] = data[start]            return 0        length = (end - start) // 2        left = self._inverse_pairs_core(data, copy, start, start + length)        right = self._inverse_pairs_core(data, copy, start + length + 1, end)        i = start + length        j = end        copy_index = end        count = left + right        while i >= start and j >= start + length + 1:            if data[i] >= data[j]:                copy[copy_index] = data[i]                # 更新操作                count += j - start - length            else:                copy[copy_index] = data[j]            copy_index -= 1            i-= 1            j -= 1            pass        while i >= start:            copy[copy_index] = data[i]            copy_index -= 1            i -= 1            pass        while j >= start + length + 1:            copy[copy_index] = data[j]            copy_index -= 1            j -= 1            pass        return count        pass    passif __name__ == '__main__':    Solution().InversePairs([        364,637,341,406,747,995,234,971,571,219,993,407,416,366,315,301,601,650,        418,355,460,505,360,965,516,648,727,667,465,849,455,181,486,149,588,233,        144,174,557,67,746,550,474,162,268,142,463,221,882,576,604,739,288,569,        256,936,275,401,497,82,935,983,583,523,697,478,147,795,380,973,958,115,        773,870,259,655,446,863,735,784,3,671,433,630,425,930,64,266,235,187,        284,665,874,80,45,848,38,811,267,575    ])