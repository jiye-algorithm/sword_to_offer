'''输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子结构）'''# -*- coding:utf-8 -*-class TreeNode:    def __init__(self, x):        self.val = x        self.left = None        self.right = None        passclass Solution:    def HasSubtree(self, pRoot1, pRoot2):        if pRoot2 == None or pRoot1 == None:            return False        result = False        if pRoot1.val == pRoot2.val:            result = self.does_tree1_has_tree2(pRoot1, pRoot2)        if not result:            result = self.HasSubtree(pRoot1.left, pRoot2)        if not result:            result = self.HasSubtree(pRoot1.right, pRoot2)        return result        pass    def does_tree1_has_tree2(self, tree1, tree2):        if tree2 == None:            return True        if tree1 == None:            return False        if tree1.val != tree2.val:            return False        return self.does_tree1_has_tree2(tree1.left, tree2.left) and self.does_tree1_has_tree2(tree1.right, tree2.right)    pass