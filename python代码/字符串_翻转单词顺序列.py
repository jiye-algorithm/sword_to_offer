'''   算法思想：先翻转整个句子，然后，依次翻转每个单词。    依据空格来确定单词的起始和终止位置'''# -*- coding:utf-8 -*-class Solution:    def ReverseSentence(self, s):        if s != None:            return ' '.join([item for item in reversed(s.split(" "))])        pass    def ReverseSentence2(self, s):        if s == None:            return s        s = list(s)        begin = 0        end = len(s) - 1        self._rever_string(s, begin, end)        begin = end = 0        while begin < len(s):            if s[begin] == ' ':                begin = end = begin + 1            elif end == len(s) or s[end] == ' ':                self._rever_string(s, begin, end - 1)                begin = end = end + 1            else:                end += 1            pass        return ''.join([item for item in s])        pass    def _rever_string(self, s, begin, end):        while begin < end:            s[begin], s[end] = s[end], s[begin]            begin += 1            end -= 1        return s        pass    passif __name__ == '__main__':    print(Solution().ReverseSentence("I am a student."))