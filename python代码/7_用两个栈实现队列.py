'''用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。'''# -*- coding:utf-8 -*-class Solution:    def __init__(self):        self.in_stack = []        self.out_stack = []        pass    def push(self, node):        # write code here        if node == None:            return        self.in_stack.append(node) if isinstance(node, int) else self.in_stack.extend(node)        pass    # 29ms    def pop(self):        # return xx        if len(self.out_stack) == 0 and len(self.in_stack) == 0:            return None        elif len(self.out_stack) == 0:            self.out_stack = self.in_stack            self.in_stack = []        return self.out_stack.pop(0)        pass    # 39ms    def pop2(self):        # return xx        if len(self.out_stack) == 0 and len(self.in_stack) == 0:            return None        elif len(self.out_stack) == 0:            while len(self.in_stack) > 0:                self.out_stack.append(self.in_stack.pop())        return self.out_stack.pop()        pass    passif __name__ == '__main__':    '''    测试用例：        * 输入为空        * 单个元素        * 多个元素    '''    '''    书中测试用例：        * 往空队列添加，删除元素        * 往非空的队列中添加和删除元素        * 连续删除元素直到队列为空    '''    solution = Solution()    # * 输入为空    solution.push(None)    # 单个元素    solution.push(1)    solution.pop()    # 多个元素    solution.push([i for i in range(10)])    [solution.pop() for _ in range(10)]    pass